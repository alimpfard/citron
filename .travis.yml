language: c
compiler: gcc
services:
    - docker
dist: focal
matrix:
  include:
    - name: "Coverage Tests"
      env: TEST=YES
      install:
        - CC='gcc -fuse-ld=gold' CXX='g++ -fuse-ld=gold' CFLAGS='-DwithCTypesNative=1 -DwithInjectNative=1 -DwithInlineAsm=0 -fprofile-arcs -ftest-coverage' LDFLAGS="-lgcov --coverage" sudo make install
      script:
        - bash ./runtests.sh
      after_success:
        - curl -s https://codecov.io/bash -o codecov.sh
        - bash codecov.sh -x gcov-8 >/dev/null 2>&1
    - name: "Build Artifacts"
      env: TEST=NO
      after_success:
        - wget https://github.com/probonopd/linuxdeployqt/releases/download/6/linuxdeployqt-6-x86_64.AppImage
        - chmod a+x linuxdeployqt-6-x86_64.AppImage
        - mkdir -p appimage/AppDir/usr && cp -r autohell/build/* appimage/AppDir/usr
        - mkdir -p appimage/AppDir/usr/share/application
        - mkdir -p appimage/AppDir/usr/share/icons/hicolor/256x256
        - cp image/citron.png appimage/AppDir/usr/share/icons/hicolor/256x256/
        - echo "[Desktop Entry]" > appimage/AppDir/usr/share/application/citron.desktop
        - echo "Type=Application" >> appimage/AppDir/usr/share/application/citron.desktop
        - echo "Name=Citron" >> appimage/AppDir/usr/share/application/citron.desktop
        - echo "Comment=Citron Interp" >> appimage/AppDir/usr/share/application/citron.desktop
        - echo "Exec=ctr" >> appimage/AppDir/usr/share/application/citron.desktop
        - echo "Icon=citron" >> appimage/AppDir/usr/share/application/citron.desktop
        - echo "Categories=Development;" >> appimage/AppDir/usr/share/application/citron.desktop
        - echo "Terminal=true" >> appimage/AppDir/usr/share/application/citron.desktop # Needed for CLI tools
        # Fine, no appimage?
        - ./linuxdeployqt-6-x86_64.AppImage appimage/AppDir/usr/share/application/citron.desktop -appimage
        - sudo cp -rf Citron*.AppImage autohell/build/bin/ctr
        - ls -lh autohell/build/*
        - ls -alh autohell/build/share/Citron/mods
        - ls -lh
        - tar cvjf release.tar.bz2 -C autohell/build .
        - (cd autohell/build && zip -r - .) > release.zip
        - wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh
        - bash upload.sh release.tar.bz2 release.zip #Citron*.AppImage*
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - docker build -t anothertest/citron:cilatest .
        - docker push anothertest/citron:cilatest

before_install:
  - sudo apt update
  - sudo apt install -y gcc g++ llvm build-essential cmake libbsd-dev libpcre3-dev libgc-dev libsparsehash-dev llvm-8 llvm-8-dev

install:
  - git submodule update --init
  - chown -R travis mods
  - chown -R travis extensions
  - chown -R travis Library
  - make
  - sudo make install

script:
  - export VERSION=$(git rev-parse --short HEAD)

branches:
  except:
    - # Do not build tags that we create when we upload to GitHub Releases
    - /^(?i:continuous.*)$/
