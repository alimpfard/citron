#compdef -P citron#

local curcontext="$curcontext" state state_descr line
typeset -A opt_args
local -a args

local flags;
flags=()
for flag in $(citron --Fs); do
    flags+=("no-$flag" "$flag")
done

args=(
    '-p[set the prompt]:str'
    '--pc[set the continuation prompt]:str'
    '-c[set the result color]:color:->colors'
    '-h[show help]'
    '-f[evaluate file]:filename:->ctr_files'
    '-F[enable/disable flag]:flag:->flags'
    '--tidy[try to tidy up code]:filename:->ctr_files'
    '--Fs[show all flags]'
    '--Fsel[select flags at startup]'
    '--meta[execute metacommand]'
    '-e[evaluate expression]'
    '-v[version information]'
    '-s[start a server on port]:port:->number'
    '--pid[set the pidfile path]:path:->_files'
    '--no-logo[do not show ascii logo]'
    '--interactive-print[value display object]'
    '--highlight-file[highlight a file and exit]:path:_files'
    '--assume-non-tty[Assume the terminal is not a tty]'
    '--without-signals[Disable signal processing]'
    '--terminal-width[Set terminal width]:number:->number'
    '--without-history[Disable load/save of history]'
    '--history-dir[Set history directory]:path->_files'
    )

_arguments -C -s -S "$args[@]"

case "$state" in
    flags)
        _values -s , 'flags' $flags
        ;;
    ctr_files)
        local -a citron_files
        citron_files=( ./**/*.ctr )
        _multi_parts / citron_files
        ;;
    colors)
        _values 'colors' red blue magenta cyan yellow green resetColor
        ;;
esac

return 1
